name: Build and Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint:ci || true
      continue-on-error: true

    - name: Generate version
      id: version
      run: |
        $timestamp = Get-Date -Format "yyyy.MM.dd.HHmm"
        $version = "v$timestamp"
        echo "version=$version" >> $env:GITHUB_OUTPUT
        echo "Generated version: $version"

    - name: Build Vite app
      run: npm run build

    - name: Build Electron app (portable only)
      run: npm run dist:portable
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: electron-builds
        path: dist/*.exe
        if-no-files-found: error

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && (github.event_name == 'push' || github.event_name == 'workflow_dispatch')

    steps:
    - uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: electron-builds
        path: ./dist

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ needs.build.outputs.version }}
        name: "Release ${{ needs.build.outputs.version }}"
        body: |
          ðŸš€ **Automatic Release**

          **Changes in this release:**
          - Latest commit: ${{ github.event.head_commit.message }}
          - Commit SHA: ${{ github.sha }}

          **Downloads:**
          - Windows Portable (.exe)

          Built automatically from commit ${{ github.sha }}
        files: dist/*.exe
        draft: false
        prerelease: false
        make_latest: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}